#!/usr/bin/env python3
"""
Test des multiples potentiom√®tres
================================

Vous voyez plein de petits potentiom√®tres - testons pour comprendre.
"""

import sys
import time
from realtime_magicstomp import RealtimeMagicstomp

def test_multiple_pots():
    """Test des multiples potentiom√®tres."""
    print("üé∏ Test Multiples Potentiom√®tres")
    print("=" * 40)
    print("Vous voyez plein de petits potentiom√®tres - testons!")
    
    ms = RealtimeMagicstomp()
    
    try:
        ms._initialize_midi()
        print("‚úÖ Connexion MIDI √©tablie")
    except Exception as e:
        print(f"‚ùå Erreur de connexion: {e}")
        return
    
    print("\nTestons diff√©rentes valeurs et comptons les potentiom√®tres...")
    
    # Test avec des valeurs progressives
    test_values = [0, 10, 32, 64, 100, 127]
    
    for i, value in enumerate(test_values):
        print(f"\nTest {i+1}/6: Valeur = {value}")
        
        # Modifier le potentiom√®tre 3
        success = ms.tweak_parameter(6, value)
        
        print(f"üì§ Message envoy√©: Potentiom√®tre 3 = {value}")
        print("üëÄ Regardez l'√©cran du Magicstomp...")
        print("   Combien de petits potentiom√®tres voyez-vous?")
        
        response = input("Nombre de potentiom√®tres visibles: ").strip()
        
        if response.isdigit():
            num_pots = int(response)
            print(f"üìù Valeur {value} ‚Üí {num_pots} potentiom√®tres visibles")
            
            if num_pots > 0:
                print("üéâ SUCCESS! On peut contr√¥ler l'affichage des potentiom√®tres!")
                print("Le Magicstomp r√©agit √† nos messages MIDI!")
        else:
            print("‚ùå R√©ponse non num√©rique")
        
        time.sleep(2)
    
    print("\n‚úÖ Test termin√©")
    print("\nConclusion:")
    print("- La communication MIDI fonctionne")
    print("- Le Magicstomp affiche des potentiom√®tres en r√©ponse")
    print("- On peut contr√¥ler l'affichage via MIDI")

def main():
    """Test des multiples potentiom√®tres."""
    test_multiple_pots()

if __name__ == "__main__":
    main()
